{"prompt": "Swagger:\nopenapi: 3.0.0\ninfo:\n  title: Account API\n  version: \"1.0.0\"\n  description: API for creating and deleting accounts in Salesforce.\nservers:\n  - url: https://qeagle8-dev-ed.develop.my.salesforce.com/\npaths:\n  /Account:\n    post:\n      summary: Create a new account\n      operationId: createAccount\n      requestBody:\n        description: Account object that needs to be created.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountRequest'\n      responses:\n        '201':\n          description: Account created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountResponse'\n        '400':\n          description: Invalid input.\n  /Account/{accountId}:\n    delete:\n      summary: Delete an existing account\n      operationId: deleteAccount\n      parameters:\n        - name: accountId\n          in: path\n          required: true\n          description: ID of the account to delete\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Account deleted successfully.\n        '404':\n          description: Account not found.\ncomponents:\n  schemas:\n    AccountRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        phone:\n          type: string\n        website:\n          type: string\n        industry:\n          type: string\n      required:\n        - name\n    AccountResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        success:\n          type: boolean\n        errors:\n          type: array\n          items:\n            type: string\n        statusCode:\n          type: integer\n", "completion": "```gherkin\nFeature: Account API\n  Scenario: Create an account with valid data\n    Given I have valid resource details\n    When I create a new resource\n    Then the response status should be 201\n\n  Scenario: Delete the created account\n    Given I have a created resource\n    When I delete the resource\n    Then the response status should be 204\n```\n\n```java\npackage automation.tests.api;\n\nimport config.ConfigManager;\nimport io.restassured.response.Response;\nimport automation.tests.pojo.CreateResourceRequest;\nimport automation.tests.pojo.CreateResponse;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ResourceAPI extends BaseAPI {\n    private final String baseUrl = ConfigManager.getBaseUrl();\n    private final String apiKey = ConfigManager.getApiKey();\n    private final ObjectMapper mapper = new ObjectMapper();\n    private static final String RESOURCE_ENDPOINT = \"/Account\";\n\n    private Map<String, String> getAuthHeaders() {\n        Map<String, String> headers = new HashMap<>();\n        headers.put(\"Authorization\", \"Bearer \" + apiKey);\n        return headers;\n    }\n\n    public CreateResponse createResource(CreateResourceRequest request) {\n        String endpoint = baseUrl + RESOURCE_ENDPOINT;\n        Response response = post(endpoint, request, getAuthHeaders());\n        try {\n            CreateResponse createResponse = mapper.readValue(response.asString(), CreateResponse.class);\n            createResponse.setStatusCode(response.getStatusCode());\n            return createResponse;\n        } catch (Exception e) {\n            throw new RuntimeException(\"Failed to parse Create Resource response\", e);\n        }\n    }\n\n    public Response deleteResource(String resourceId) {\n        String endpoint = baseUrl + RESOURCE_ENDPOINT + \"/\" + resourceId;\n        return delete(endpoint, getAuthHeaders());\n    }\n}\n```\n\n```java\npackage automation.tests.pojo;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonInclude;\n\n@JsonIgnoreProperties(ignoreUnknown = true)\n@JsonInclude(JsonInclude.Include.NON_NULL)\npublic class CreateResourceRequest {\n    private String name;\n    private String phone;\n    private String website;\n    private String industry;\n\n    // Getters and setters...\n    public String getName() { return name; }\n    public void setName(String name) { this.name = name; }\n    public String getPhone() { return phone; }\n    public void setPhone(String phone) { this.phone = phone; }\n    public String getWebsite() { return website; }\n    public void setWebsite(String website) { this.website = website; }\n    public String getIndustry() { return industry; }\n    public void setIndustry(String industry) { this.industry = industry; }\n}\n```\n\n```java\npackage automation.tests.steps;\n\nimport automation.tests.api.ResourceAPI;\nimport automation.tests.pojo.CreateResourceRequest;\nimport automation.tests.pojo.CreateResponse;\nimport io.cucumber.java.en.Given;\nimport io.cucumber.java.en.When;\nimport io.cucumber.java.en.Then;\nimport org.testng.Assert;\n\npublic class ResourceSteps {\n    private ResourceAPI resourceAPI;\n    private CreateResourceRequest resourceRequest;\n    private CreateResponse createResponse;\n\n    @Given(\"I have valid resource details\")\n    public void iHaveValidResourceDetails() {\n        resourceAPI = new ResourceAPI();\n        resourceRequest = new CreateResourceRequest();\n        resourceRequest.setName(\"Test Resource\");\n        // Set other details as needed\n    }\n\n    @When(\"I create a new resource\")\n    public void iCreateANewResource() {\n        createResponse = resourceAPI.createResource(resourceRequest);\n        Assert.assertNotNull(createResponse.getId(), \"Resource id should not be null\");\n    }\n\n    @Then(\"the response status should be {int}\")\n    public void theResponseStatusShouldBe(int status) {\n        Assert.assertEquals(createResponse.getStatusCode(), status, \"Expected status code mismatch\");\n    }\n\n    @When(\"I delete the resource\")\n    public void iDeleteTheResource() {\n        Assert.assertNotNull(createResponse.getId(), \"Resource id is required for deletion\");\n        Response deleteResponse = resourceAPI.deleteResource(createResponse.getId());\n        Assert.assertEquals(deleteResponse.getStatusCode(), 204, \"Expected deletion status code 204\");\n    }\n}\n```"}
